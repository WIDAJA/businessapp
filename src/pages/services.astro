---
import "@fontsource-variable/podkova";
import Layout from "../layouts/Layout.astro";
import HeaderServices from "../components/HeaderServices.astro";

interface Menu {
  id: string;
  name: string;
  icon: string;
  text: string;
}

const menu: Menu[] = [
  {
    id: "btnPortafolio",
    name: "Portafolio",
    icon: "/assets/icons/app-window.svg",
    text: "Cada uno de tus negocios tendrá un espacio exclusivo en nuestra plataforma. Comparte fácilmente la URL o código QR con tus clientes para acceder a información sobre servicios, noticias y citas.",
  },
  {
    id: "btnCalendar",
    name: "Agenda",
    icon: "/assets/icons/calendar.svg",
    text: "Cada profesional de tu negocio podrá recibir solicitudes de servicios a través de nuestro sistema de agendamiento diseñado para tus clientes.",
  },
  {
    id: "btnBusiness",
    name: "Gestión del negocio",
    icon: "/assets/icons/business.svg",
    text: "Podrás administrar varios negocios desde una sola cuenta, registrando profesionales, servicios ofrecidos, ingresos, egresos, inventario y manteniendo una base de datos de tus clientes.",
  },
  {
    id: "btnReports",
    name: "Reportes",
    icon: "/assets/icons/reports.svg",
    text: "Tendrás informes del flujo de caja, servicios más demandados, ingresos por periodos de tiempo, clientes más recurrentes, etc.",
  },
];
---

<Layout title="Businessapp - Servicios">
  <HeaderServices menu={menu} />
  <article class="grid grid-cols-2 mt-20">
    <section></section>
    <section>
      <header>
        <h1 class="text-6xl font-bold" id="txtTitle"></h1>
      </header>
      <p class="text-4xl mt-5" id="txtText"></p>
    </section>
  </article>
</Layout>

<style>
  h1,
  h3 {
    font-family: "Podkova Variable", serif;
  }
</style>

<script is:inline define:vars={{ menu }}>
  const title = document.getElementById("txtTitle");
  const parragraph = document.getElementById("txtText");

  const removeSelectedClass = () => {
    for (const m of menu) {
      document.getElementById(m.id)?.classList.remove("bg-white");
      document.getElementById(m.id)?.classList.add("hover:bg-white");
    }
  };

  const selectedMenu = (ev, { name, text }) => {
    title.innerText = name;
    parragraph.innerText = text;

    removeSelectedClass();
    ev.target.classList.add("bg-white");
  };

  (() => {
    for (const m of menu) {
      document
        .getElementById(m.id)
        ?.addEventListener("click", (ev) => selectedMenu(ev, m));
    }

    document.getElementById(menu[0].id).click();
  })();
</script>
